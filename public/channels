<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go by Example: チャンネル</title>
    <link rel=stylesheet href="site.css">
  </head>
  <body>
    <div class="example" id="channels">
      <h2><a href="./">Go by Example</a>: チャンネル</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>_チャンネル_は平行しているゴルーチン同士をつなぐパイプです。
ひとつのゴルーチンがチャンネルに値を送信し、
別のゴルーチンがその値を受信できます。</p>

          </td>
          <td class="code empty leading">
	        
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        <a href="http://play.golang.org/p/_xdJd4UT-L0"><img title="Run code" src="play.png" class="run" /></a>
            <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>make(chan val-type)</code>で新しいチャンネルを作ります。
チャンネルは送受信する値で型付けされます。</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">messages</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">string</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>チャンネルへの値の_送信_は<code>channel &lt;-</code>という構文を使います。
ここでは新しいゴルーチンから<code>&quot;ping&quot;</code>を<code>messages</code>チャンネルに送信しています。</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span> <span class="nx">messages</span> <span class="o">&lt;-</span> <span class="s">&quot;ping&quot;</span> <span class="p">}()</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>&lt;-channel</code>という構文でチャンネルから値を_受信_します。
ここでは、上で送信した<code>&quot;ping&quot;</code>メッセージを受信し、
プリントしています。</p>

          </td>
          <td class="code">
	        
            <div class="highlight"><pre>    <span class="nx">msg</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">messages</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>プログラムを実行すると<code>&quot;ping&quot;</code>メッセージがチャンネル経由でひとつの
ゴルーチンから別のゴルーチンに渡されます。</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="gp">$</span> go run channels.go 
<span class="go">ping</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>デフォルトでは送信者と受信者の両方が準備完了になるまで
送信と受信はブロックされます。これによって他の同期の仕組みを使わなくても
プログラムの最後で<code>&quot;ping&quot;</code>メッセージを待つことができます。</p>

          </td>
          <td class="code empty">
	        
            
          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        次の例: <a href="channel-buffering">チャンネルバッファリング</a>.
      </p>
      
      <p class="footer">
        by <a href="https://markmcgranaghan.com">Mark McGranaghan</a> | translated by <a href="https://twitter.com/tokutakes">@tokutakes</a> | <a href="https://github.com/s-tokutake/gobyexample-ja/blob/master/examples/channels">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
  </body>
</html>
